(function () {
	angular.module("app", ["ngAnnotateText"]).controller("AnnotationController", function ($scope) {
		$scope.annotationColours = [{
			name: "Red",
			value: "red"
		}, {
			name: "Green",
			value: "green"
		}, {
			name: "Blue",
			value: "blue"
		}, {
			name: "Yellow",
			value: "yellow"
		}, {
			name: "Pink",
			value: "pink"
		}, {
			name: "Aqua",
			value: "aqua"
		}], $scope.templates = [{
			type: "red",
			comment: "Grammar mistake",
			points: -1
		}, {
			type: "aqua",
			comment: "Spelling mistake",
			points: -1
		}], $scope.useTemplate = function (template) {
			null !== template.type && ($scope.$annotation.type = template.type), null !== template.comment && ($scope.$annotation.data.comment = template.comment), null !== template.points && ($scope.$annotation.data.points = template.points), $scope.$close()
		}, $scope.useColor = function (color) {
			null !== color.value && ($scope.$annotation.type = color.value)
		}, $scope.isActiveColor = function (color) {
			return color && color.value === $scope.$annotation.type
		}, $scope.close = function () {
			return $scope.$close()
		}, $scope.reject = function () {
			return $scope.$reject()
		}
	}).controller("MainController", function ($scope, $timeout, NGAnnotation) {
        // 这里加入要显示的文字
        var demoTexts = ["Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium aspernatur dolores earum, libero possimus praesentium unde vero? Aut dolorem est harum, odit perspiciatis quaerat, quibusdam temporibus tenetur totam ut vel."];
        // 已被标记的数据
        var annotations = [
			[new NGAnnotation({
				startIndex: 0,
				endIndex: 39,
				type: "green",
				data: {
					comment: "Well written!",
				}
			}), new NGAnnotation({
				startIndex: 240,
				endIndex: 247,
				type: "red",
				data: {
					comment: "Spelling mistake",
				}
			})]
        ];
        return $scope.demoTexts = demoTexts, $scope.annotations = annotations, $scope.onAnnotate = function ($annotation) {
            // 保存标注触发事件，执行上传数据等操作
			console && console.log($annotation)
		}, $scope.onAnnotateError = function ($ex) {
            // 选择标记文字出错，中间含有其他标注情况等
			if ("NG_ANNOTATE_TEXT_PARTIAL_NODE_SELECTED" === $ex.message) return alert("Invalid selection.");
			throw $ex
		}, $scope.onPopupShow = function ($el) {
			var firstInput;
			return firstInput = $el.find("input, textarea").eq(0).focus(), firstInput && firstInput[0].select()
		}, $scope.hasPoints = function (points) {
			var _isNaN;
			return _isNaN = Number.isNaN || isNaN, "number" == typeof points && 0 !== points && !_isNaN(points)
		}, $scope.hasComment = function (comment) {
			return "string" == typeof comment && comment.length > 0
		}, $scope.annotationsAsFlatList = function (annotations) {
			return null == annotations && (annotations = $scope.annotations[0]), annotations.length ? annotations.map(function (annotation) {
				var arr;
				return arr = [], $scope.hasPoints(annotation.data.points) && $scope.hasComment(annotation.data.comment) && arr.push(annotation), annotation.children && annotation.children.length && (arr = arr.concat($scope.annotationsAsFlatList(annotation.children))), arr
			}).reduce(function (prev, current) {
				return prev.concat(current)
			}) : []
		}, $scope.clearPopups = function () {
			return $scope.$broadcast("ngAnnotateText.clearPopups")
		}
	})
}).call(this);
//# sourceMappingURL=main.min.js.map
